Query 1:
__int64 __fastcall PCXWritePixels(__int64 a1, unsigned __int8 *a2, __int64 a3)
{
  for (__int64 y = 0; ; ++y) {
    if (y >= *(unsigned __int8 *)(a1 + 17))
      return 1LL;

    unsigned __int8 current_val;
    __int64 count = 1;
    int width = *(unsigned __int16 *)(a1 + 18);

    if (*(_BYTE *)(a1 + 2))
      current_val = *a2++;

    for (int x = 0; x < width - 1; ++x) {
      unsigned __int8 next_val = *a2++;
      if (next_val == current_val) {
        if (count++ >= 63) {
          WriteBlobByte(a3, count | 0xC0u);
          WriteBlobByte(a3, current_val);
          count = 1;
        }
      } else {
        if (count > 1) {
          WriteBlobByte(a3, count | 0xC0u);
          WriteBlobByte(a3, current_val);
        } else {
          WriteBlobByte(a3, current_val);
        }
        current_val = next_val;
        count = 1;
      }
    }

    if (count > 1) {
      WriteBlobByte(a3, count | 0xC0u);
      WriteBlobByte(a3, current_val);
    } else {
      WriteBlobByte(a3, current_val);
    }
  }
}

/////
Query 2:
char *__fastcall c_escape(char *a1)
{
    char *result = NULL;
    size_t buffer_size = 0;
    char *src = a1;

    for (; *src; src++) {
        char escape_type = c_escape_char(*src);
        if (escape_type >= 1) {
            buffer_size += (escape_type == 1) ? 3 : 2;
        }
    }

    if (!buffer_size) {
        return a1;
    }

    result = xmalloc((src - a1) + buffer_size + 3);
    char *dest = result;
    *dest++ = '"';

    for (src = a1; *src; src++) {
        char c = *src;
        char escape_type = c_escape_char(c);

        if (escape_type == 1) {
            *dest++ = '\\';
            *dest++ = 'x';
            *dest++ = "0123456789ABCDEF"[(c >> 4) & 0xF];
            *dest++ = "0123456789ABCDEF"[c & 0xF];
        } else if (escape_type > 1) {
            *dest++ = '\\';
            *dest++ = "abtnvfr"[escape_type - 2];
        } else {
            *dest++ = c;
        }
    }

    *dest++ = '"';
    *dest = 0;
    return result;
}